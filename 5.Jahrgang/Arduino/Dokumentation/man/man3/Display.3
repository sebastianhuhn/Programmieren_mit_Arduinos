.TH "Display" 3 "Fre Aug 4 2017" "WFO: Arduino Informatik-Schulprojekt" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Display \- Diese Klasse ermöglicht die Verwendung und gezielte Ansteuerung der Anzeige\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Display\&.h>\fP
.PP
Abgeleitet von LiquidCrystal_I2C\&.
.SS "Öffentliche Methoden"

.in +1c
.ti -1c
.RI "\fBDisplay\fP ()"
.br
.ti -1c
.RI "void \fBinitialisiere\fP ()"
.br
.ti -1c
.RI "void \fBgeheErsteZeile\fP ()"
.br
.ti -1c
.RI "void \fBgeheZweiteZeile\fP ()"
.br
.ti -1c
.RI "void \fBgehePosition\fP (unsigned zeile, unsigned position)"
.br
.ti -1c
.RI "void \fBloescheText\fP ()"
.br
.ti -1c
.RI "void \fBschreibeText\fP (const char text[])"
.br
.ti -1c
.RI "void \fBschreibeText\fP (int num)"
.br
.ti -1c
.RI "void \fBschreibeText\fP (float num, int dec=1)"
.br
.in -1c
.SH "Ausführliche Beschreibung"
.PP 
Diese Klasse ermöglicht die Verwendung und gezielte Ansteuerung der Anzeige\&. 
.SH "Beschreibung der Konstruktoren und Destruktoren"
.PP 
.SS "Display::Display ()\fC [inline]\fP, \fC [explicit]\fP"
Konstruktor
.PP
Erstellt ein Objekt, welches die Ansteuerung der Anzeige ermöglicht\&. Beispiel: 
.PP
.nf
Display anzeige;

.fi
.PP
 
.SH "Dokumentation der Elementfunktionen"
.PP 
.SS "void Display::geheErsteZeile ()\fC [inline]\fP"
Setzt den Cursor der Anzeige auf den Beginn der ersten Zeile\&. Beispiel: 
.PP
.nf
anzeige\&.geheErsteZeile();

.fi
.PP
 
.SS "void Display::gehePosition (unsigned zeile, unsigned position)\fC [inline]\fP"
Setzt den Cursor der Anzeige an die jeweilige Position\&. 
.PP
\fBParameter:\fP
.RS 4
\fIzeile\fP Zeilennummer ( 0 oder 1 ) 
.br
\fIposition\fP Positionsnummer ( 0 \&.\&.\&. 15 )
.RE
.PP
Beispiel: 
.PP
.nf
anzeige\&.gehePosition(1, 10);

.fi
.PP
 
.SS "void Display::geheZweiteZeile ()\fC [inline]\fP"
Setzt den Cursor der Anzeige auf den Beginn der zweiten Zeile\&. Beispiel: 
.PP
.nf
anzeige\&.geheZweiteZeile();

.fi
.PP
 
.SS "void Display::initialisiere ()\fC [inline]\fP"
Initialisiert die Anzeige\&. Beispiel: 
.PP
.nf
anzeige\&.initialisiere();

.fi
.PP
 
.SS "void Display::loescheText ()\fC [inline]\fP"
Löscht den gesamten Anzeigetext\&.
.PP
Beispiel: 
.PP
.nf
anzeige\&.loescheText();

.fi
.PP
 
.SS "void Display::schreibeText (const char text[])\fC [inline]\fP"
Gibt den jeweiligen Text auf dem \fBDisplay\fP von der aktuellen Position aus beginned aus\&. 
.PP
\fBParameter:\fP
.RS 4
\fItext\fP Ausgabetext
.RE
.PP
Beispiel: 
.PP
.nf
anzeige\&.schreibeText("Testtext");

.fi
.PP
 
.SS "void Display::schreibeText (int num)\fC [inline]\fP"
Gibt die jeweilige Zahl auf dem \fBDisplay\fP von der aktuellen Position aus beginned aus\&. 
.PP
\fBParameter:\fP
.RS 4
\fInum\fP Auszugebende Ganzzahl
.RE
.PP
Beispiel:
.PP
.PP
.nf
anzeige\&.schreibeText(1500);
.fi
.PP
 
.SS "void Display::schreibeText (float num, int dec = \fC1\fP)\fC [inline]\fP"
Gibt die jeweilige Zahl auf dem \fBDisplay\fP von der aktuellen Position aus beginned aus\&. 
.PP
\fBParameter:\fP
.RS 4
\fInum\fP Auszugebende Kommazahl 
.br
\fIdec\fP Anzahl der Dezimalnachkommastellen Beispiel: 
.PP
.nf
anzeige\&.schreibeText(15\&.5);

.fi
.PP
 
.RE
.PP


.SH "Autor"
.PP 
Automatisch erzeugt von Doxygen für WFO: Arduino Informatik-Schulprojekt aus dem Quellcode\&.
